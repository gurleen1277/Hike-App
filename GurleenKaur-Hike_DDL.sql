Create database Hike;

use Hike;

-- MySQL Script generated by MySQL Workbench
-- Fri Dec 15 03:11:01 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Hike
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Hike
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Hike` ;
USE `Hike` ;

-- -----------------------------------------------------
-- Table `Hike`.`Participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hike`.`Participant` (
  `Participant_id` INT NOT NULL,
  `Participant_Name` VARCHAR(45) NOT NULL,
  `Participant_Email` VARCHAR(45) NOT NULL,
  `Participant_Ph_no` VARCHAR(10) NOT NULL,
  `Participant_Address` VARCHAR(45) NOT NULL,
  `Participant_Postal_code` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`Participant_id`),
  UNIQUE INDEX `Partcipant_Email_UNIQUE` (`Participant_Email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hike`.`Hikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hike`.`Hikes` (
  `Hike_id` INT NOT NULL,
  `Hike_Name` VARCHAR(20) NOT NULL,
  `Location` VARCHAR(20) NULL,
  `Distance` VARCHAR(45) NOT NULL,
  `Duration` TIME NOT NULL,
  `Difficulty_Level` VARCHAR(45) NULL,
  PRIMARY KEY (`Hike_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hike`.`Guide`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hike`.`Guide` (
  `Guide_License` VARCHAR(10) NOT NULL,
  `Guide_Name` VARCHAR(45) NOT NULL,
  `Guide_Email` VARCHAR(45) NOT NULL,
  `Guide_Ph_no` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`Guide_License`),
  UNIQUE INDEX `Guide_Email_UNIQUE` (`Guide_Email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hike`.`Hikes_has_Guide`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hike`.`Hikes_has_Guide` (
  `Hike_id` INT NOT NULL,
  `Guide_License` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`Hike_id`, `Guide_License`),
  INDEX `fk_Hikes_has_Guide_Guide1_idx` (`Guide_License` ASC) VISIBLE,
  INDEX `fk_Hikes_has_Guide_Hikes1_idx` (`Hike_id` ASC) VISIBLE,
  CONSTRAINT `fk_Hikes_has_Guide_Hikes1`
    FOREIGN KEY (`Hike_id`)
    REFERENCES `Hike`.`Hikes` (`Hike_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hikes_has_Guide_Guide1`
    FOREIGN KEY (`Guide_License`)
    REFERENCES `Hike`.`Guide` (`Guide_License`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hike`.`Participant_has_Hikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hike`.`Participant_has_Hikes` (
  `Participant_id` INT NOT NULL,
  `Hike_id` INT NOT NULL,
  `Start_Date_Time` DATETIME NOT NULL,
  `End_Date_Time` DATETIME NULL,
  PRIMARY KEY (`Participant_id`, `Hike_id`, `Start_Date_Time`),
  INDEX `fk_Partcipant_has_Hikes_Hikes1_idx` (`Hike_id` ASC) VISIBLE,
  INDEX `fk_Partcipant_has_Hikes_Partcipant1_idx` (`Participant_id` ASC) VISIBLE,
  CONSTRAINT `fk_Partcipant_has_Hikes_Partcipant1`
    FOREIGN KEY (`Participant_id`)
    REFERENCES `Hike`.`Participant` (`Participant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Partcipant_has_Hikes_Hikes1`
    FOREIGN KEY (`Hike_id`)
    REFERENCES `Hike`.`Hikes` (`Hike_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
